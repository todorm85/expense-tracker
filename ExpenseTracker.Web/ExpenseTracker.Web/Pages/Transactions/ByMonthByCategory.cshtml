@page
@using ExpenseTracker.Core
@model ExpenseTracker.Web.Pages.Transactions.TransactionsByMonthByCategoryModel
@{
    ViewData["Title"] = "Expenses by months by categories";
}

<partial name="_Submenu" />
<div class="text-center">
    <h1 class="display-4 mb-4">@ViewData["Title"]</h1>
    <form method="post">
        <div class="border mb-3 rounded">
            <div class="mb-3 mt-3">
                From <input type="text" asp-for="DateFrom" class="rounded" />
                To <input type="text" asp-for="DateTo" class="rounded" />
                <select asp-for="CategoryFilter" class="rounded ml-2" asp-items="Model.Categories"></select>
                <button type="submit" asp-page-handler="sort" class="ml-4"> Apply </button>
            </div>
        </div>

        <div class="container">
            <div class="row">
                @foreach (var catAvg in Model.CategoriesAverages.OrderByDescending(x => x.Value[1]))
                {
                    <div class="d-inline-block p-2 m-1 bg-light border rounded">
                        <span class="badge badge-primary">@(string.IsNullOrEmpty(catAvg.Key) ? "Unspecified" : catAvg.Key) </span>
                        <span class="badge badge-secondary"> @catAvg.Value[1].ToString("N0") </span> |
                        <span class="text-secondary"> @catAvg.Value[0].ToString("N0") </span>
                    </div>
                }
            </div>

            <h3 class="row text-left border-top mt-3">
                <div class="col-2">Average</div>
                <div class="col-2 text-right"><span class="badge badge-secondary">@Model.AverageExpense.ToString("N0")</span></div>
                <div class="col-2 text-center"><span class="badge">@Model.AverageIncome.ToString("N0")</span></div>
                @{
                    var avgBalClass = "danger";
                    if (Model.AverageBalance >= 0)
                    {
                        avgBalClass = "success";
                    }
                }
                <div class="col-1"><span class="badge badge-@avgBalClass">@Model.AverageBalance.ToString("N0")</span></div>
                <div class="col"></div>
            </h3>


            @{DateTime lastDateTime = default(DateTime); }
            @for (int i = 0; i < Model.Transactions.Count; i++)
            {
                var t = Model.Transactions[i];
                lastDateTime = t.Date.SetToBeginningOfMonth();
                <div class="row border border-primary alert-primary">
                    <div class="col-3 text-left">
                        <button class="btn btn-link" type="button" onclick="onToggleElement('@("month__" + t.Date.ToString("MM_yy"))')">
                            <h4>@(t.Date.ToString("yyyy MMMM"))</h4>
                        </button>
                    </div>
                    <div class="col-4 text-right">
                        <h5 class="row pt-2">

                            @{var savingsClassValue = "success";
                                var saved = Model.MonthsIncomeTotals[lastDateTime] - Model.MonthsTotals[lastDateTime];
                                if (saved < 0)
                                {
                                    savingsClassValue = "danger";
                                }
                            }

                            <div class="col text-left">
                                <div class="badge badge-secondary">@Model.MonthsTotals[lastDateTime].ToString("N0")</div>
                            </div>
                            <span class="ml-2 mr-2">|</span>
                            <div class="col text-center">
                                <div>@Model.MonthsIncomeTotals[lastDateTime].ToString("N0")</div>
                            </div>
                            <span class="ml-2 mr-2">|</span>
                            <div class="col text-center">
                                <div class="badge badge-@savingsClassValue">@saved.ToString("N0")</div>
                            </div>
                        </h5>
                    </div>
                </div>

                var monthDisplay = "none";
                if (Model.ExpandedMonths.ContainsKey(t.Date.SetToBeginningOfMonth()))
                {
                    monthDisplay = "revert";
                }

                <div class="row border border-secondary alert-secondary gridExpandable" id="@("month__" + t.Date.ToString("MM_yy"))" style="display: @monthDisplay">
                    <div class="col text-left">
                        @while (t != null && t.Date.SetToBeginningOfMonth() == lastDateTime)
                        {
                            var lastCategory = t.Category ?? "";
                            <div class="row">
                                <div class="col-3">
                                    <button class="btn btn-link text-dark" type="button" onclick="onToggleElement('@("category__" + t.Date.ToString("MM_yy__") + t.Category)')">
                                        <h5>@(string.IsNullOrWhiteSpace(t.Category) ? "Unspecified" : t.Category)</h5>
                                    </button>
                                </div>
                                <div class="col text-left mt-1">
                                    <h5>@Model.MonthsCategoriesTotals[lastDateTime][lastCategory].ToString("N0")</h5>
                                </div>
                            </div>

                            var categoryDisplay = "none";
                            if (Model.ExpandedCategories.ContainsKey(t.Date.SetToBeginningOfMonth()) &&
                                Model.ExpandedCategories[t.Date.SetToBeginningOfMonth()].ContainsKey(t.Category ?? "") ||
                                Model.MonthsCategoriesTotals[lastDateTime].Count == 1)
                            {
                                categoryDisplay = "revert";
                            }

                            <div id="@("category__" + t.Date.ToString("MM_yy__") + t.Category)" style="display: @categoryDisplay" class="row gridExpandable">
                                <div class="col border">
                                    @while ((t.Category ?? "") == lastCategory && t.Date.SetToBeginningOfMonth() == lastDateTime)
                                    {
                                        <div class="row border bg-light">
                                            <div class="col-3 pl-4">@t.Date.ToString("dd HH:mm")</div>
                                            <div class="col-1">@t.Amount.ToString("N0")</div>
                                            <div class="col-4"><textarea asp-for="Transactions[i].Details" rows="3" class="form-control updateInitialFocus"></textarea></div>
                                            <div class="col-2"><input asp-for="Transactions[i].Category" class="form-control" placeholder="name:key(opt)" /></div>
                                            <div class="col-2">
                                                <input type="hidden" asp-for="Transactions[i].Date" />
                                                <input type="hidden" asp-for="Transactions[i].Amount" />
                                                <input type="hidden" asp-for="Transactions[i].Id" />
                                                <button class="updateBtn" type="submit" asp-page-handler="update" asp-route-id="@t.Id" onclick="appendPositionAndExpansion(this)"> update </button>
                                                <button type="submit" asp-page-handler="delete" asp-route-id="@t.Id" onclick="appendPositionAndExpansion(this)"> delete </button>
                                            </div>
                                        </div>
                                        i++;
                                        if (i == Model.Transactions.Count)
                                        {
                                            t = null;
                                            break;
                                        }
                                        t = Model.Transactions[i];
                                    }
                                </div>
                            </div>
                        }
                        @{
                            i--;
                        }
                    </div>
                </div>
            }
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_AutoScrollScriptPartial" />
    <script>
        function appendPositionAndExpansion(el) {
            appendPosition(el);
            var expandables = document.getElementsByClassName("gridExpandable");
            var expanded = "";
            for (var i = 0; i < expandables.length; i++) {
                var e = expandables[i];
                if (e.style.display !== "none") {
                    expanded = expanded + "," + e.id;
                }
            }

            el.formAction = el.formAction + "&expanded=" + expanded;
        }
    </script>
}