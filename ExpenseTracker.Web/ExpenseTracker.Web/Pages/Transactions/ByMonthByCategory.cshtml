@page
@using ExpenseTracker.Core
@model ExpenseTracker.Web.Pages.Transactions.TransactionsByMonthByCategoryModel
@{
    ViewData["Title"] = "Expenses by months by categories";
}

<div class="text-center">
    <h1 class="display-4 mb-4">@ViewData["Title"]</h1>
    <form method="post">
        <partial name="_Filters" for="Filters" />
        @if (Model.CategoriesForMonths.Count > 0)
        {
            <div class="row">
                @foreach (var catAvg in Model.AverageAndTotalsForCategory.OrderByDescending(x => x.Value[1]))
                {
                    <div class="d-inline-block p-2 m-1 bg-light border rounded">
                        <span class="badge badge-primary">@(string.IsNullOrEmpty(catAvg.Key) ? "Unspecified" : catAvg.Key) </span>
                        <span class="badge badge-secondary"> @catAvg.Value[1].ToString("N0") </span> |
                        <span class="text-secondary"> @catAvg.Value[0].ToString("N0") </span>
                    </div>
                }
            </div>

            <h3 class="row text-left border-top mt-3">
                <span class="col-2 d-block">Average</span>
                <span class="col-2 text-right d-block"><span class="badge badge-secondary">@Model.AverageExpense.ToString("N0")</span></span>
                <span class="col-2 text-center d-block"><span class="badge">@Model.AverageIncome.ToString("N0")</span></span>
                @{ var avgBalClass = (Model.AverageBalance >= 0) ? "success" : "danger"; }
                <span class="col-1 d-block"><span class="badge badge-@avgBalClass">@Model.AverageBalance.ToString("N0")</span></span>
                <span class="col d-block"></span>
            </h3>


            @for (int mi = 0; mi < Model.CategoriesForMonths.Count; mi++)
            {
                var monthCategories = Model.CategoriesForMonths[mi];
                <div class="row border border-primary alert-primary">
                    <div class="col-3 text-left">
                        <button class="btn btn-link" type="button" onclick="onToggleElement('@("month__" + monthCategories.Month.ToString("MM_yy"))')">
                            <h4>@(monthCategories.Month.ToString("yyyy MMMM"))</h4>
                        </button>
                    </div>
                    <div class="col-4 text-right pt-2">
                        <partial name="_Summary" model="new decimal[] { monthCategories.TotalExpenses,monthCategories.TotalIncome,monthCategories.Balance }" />
                    </div>
                </div>

                var monthDisplay = monthCategories.IsExpanded ? "revert" : "none";

                <div class="row border border-secondary alert-secondary gridExpandable" id="@("month__" + monthCategories.Month.ToString("MM_yy"))" style="display: @monthDisplay">
                    <div class="col text-left">
                        @for (int ci = 0; ci < monthCategories.Count; ci++)
                        {
                            var categoryTransactions = monthCategories[ci];
                            var currentCategoryKey = this.Model.GetCategoryKey(categoryTransactions.CategoryName);
                            var rowClass = categoryTransactions.IsNegativeBalance ? "" : "alert-success";
                            <div class="row @rowClass">
                                <div class="col-3">
                                    <button class="btn btn-link text-dark" type="button" onclick="onToggleElement('@("category__" + monthCategories.Month.ToString("MM_yy__") + currentCategoryKey)')">
                                        <h5>@(currentCategoryKey)</h5>
                                    </button>
                                </div>
                                <div class="col-4 mt-1">
                                    <partial name="_Summary" model="new decimal[] { categoryTransactions.TotalExpense,categoryTransactions.TotalIncome,categoryTransactions.Balance }" />
                                </div>
                            </div>

                            var categoryDisplay = "none";
                            if (categoryTransactions.IsExpanded || monthCategories.Count == 1)
                            {
                                categoryDisplay = "revert";
                            }

                            <div id="@("category__" + monthCategories.Month.ToString("MM_yy__") + currentCategoryKey)" style="display: @categoryDisplay" class="row gridExpandable">
                                <div class="col border">
                                    <partial name="_Transactions" for="CategoriesForMonths[mi][ci]" view-data='@(new ViewDataDictionary(ViewData) { { "HideHeader", true } } )' />
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }
        else
        {
            <div class="alert-warning alert">No transactions found.</div>
        }
    </form>
</div>
