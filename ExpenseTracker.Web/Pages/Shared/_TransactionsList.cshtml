@model ExpenseTracker.Web.Pages.Shared.TransactionsListModel

@if (Model.HasFailed)
{
    <div class="alert alert-warning mb-3">
        <div class="d-flex justify-content-between align-items-center">
            <h4 class="mb-0">Failed Transactions</h4>
        </div>
        <p class="mb-2">There are @Model.Transactions.Count(t => t.Reason != Core.Services.Models.CreateTransactionResult.Reason.None) transactions that could not be processed.</p>
        <div class="text-end">
            <form method="post" asp-page="/Transactions/Upload" asp-page-handler="RetryFailed">
                <button type="submit" class="btn btn-primary btn-sm">Retry Failed Transactions</button>
            </form>
        </div>
    </div>
}

@if (Model.Transactions.Count > 0)
{
<table>
    @if (!Model.HideHeader)
    {
        <thead>
            <tr class="table-info">
                @if (Model.ShowId)
                {
                    <th>Id</th>
                }
                <th>Date</th>
                <th>Amount</th>
                <th>Type</th>
                <th>Details</th>
                @if (Model.ShowSource)
                {
                    <th>Source</th>
                }
                @if (Model.HasFailed)
                {
                    <th>Reason</th>
                }
                <th>Category</th>
                <th>Actions</th>
            </tr>
        </thead>
    }
    
    <tbody>
        @for (var transx = 0; transx < Model.Transactions.Count; transx++)
        {
            var t = Model.Transactions[transx];
            var typeClass = t.Type == Core.Transactions.TransactionType.Income ? "table-success" : "";
            
            @if (t.Reason != Core.Services.Models.CreateTransactionResult.Reason.None)
            {
                typeClass += " table-warning";
            }
            
            <tr id="@("trRow_" + t.TransactionId)" class="@typeClass">
                @if (Model.ShowId)
                {
                    <td>
                        @t.TransactionId
                    </td>
                }
                <td>
                    <input type="hidden" asp-for="@Model.Transactions[transx].TransactionId" />
                    <input type="hidden" asp-for="@Model.Transactions[transx].Source" />
                    <input type="hidden" asp-for="@Model.Transactions[transx].Reason" />
                    @{
                        var dateType = Model.ShowTime ? "datetime-local" : "date";
                        var dateWidth = Model.ShowTime ? "255px" : "162px";
                    }
                    <input id="date_@t.TransactionId" type="@dateType" asp-for="@Model.Transactions[transx].Date" class="form-control" style="width: @(dateWidth)!important;" />
                </td>
                <td style="width:5%"><input id="amount_@t.TransactionId" asp-for="@Model.Transactions[transx].Amount" class="form-control auto-select" style="min-width:80px" onchange="onInputChanged(this, '@t.TransactionId')" /></td>
                <td>
                    <select id="type_@t.TransactionId" asp-for="Transactions[transx].Type" asp-items="Html.GetEnumSelectList<Core.Transactions.TransactionType>()" style="height: 35px; border: 1px solid lightgray; border-radius: 3px"></select>
                </td>
                <td style="width:60%">
                    <textarea id="details_@t.TransactionId" asp-for="@Model.Transactions[transx].Details" rows="@Model.DetailsHeight" class="form-control" style="min-width:150px;"></textarea>
                </td>
                @if (Model.ShowSource)
                {
                    <td style="min-width: 9em;">
                        @t.Source
                    </td>
                }
                @{
                    var failedDisplay = Model.HasFailed ? "revert" : "none";
                    var addedDisplay = !Model.HasFailed ? "revert" : "none";
                }
                @if (Model.HasFailed)
                {
                    <td style="min-width: 9em;">
                        <div style="display: @failedDisplay" class="failed_@t.TransactionId">
                            <input id="category_@t.TransactionId" asp-for="@Model.Transactions[transx].Reason"
                                   class="form-control" placeholder="name:key(opt)" disabled style="min-width: 100px;" />
                        </div>
                    </td>
                }
                <td style="width:20%">
                    <input id="category_@t.TransactionId" asp-for="@Model.Transactions[transx].Category"
                           class="form-control auto-select" placeholder="name:key(opt)" style="min-width: 150px;" list="cats" autocomplete="off" />
                </td>
                <td style="width:15%; min-width: 90px;">
                    <div style="display: @failedDisplay" class="failed_@t.TransactionId">
                        <button class="btn" style="width: 30px; height:30px" type="button">
                            force create
                        </button>
                    </div>
                    <div style="display: @addedDisplay" class="added_@t.TransactionId">
                        <button type="submit" asp-route-id="@t.TransactionId" asp-page-handler="updateTransaction" btn-apply onclick="return onUpdate(event, '@t.TransactionId')"></button>
                        <button type="submit" asp-route-id="@t.TransactionId" asp-page-handler="deleteTransaction" btn-del></button>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
}

<vc:categories-data-list id="cats"></vc:categories-data-list>
