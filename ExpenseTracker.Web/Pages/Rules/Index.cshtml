@page
@model ExpenseTracker.Web.Pages.Rules.IndexModel
@{
    var routeValues = new Dictionary<string, string>() {
        { "CurrentPage", Model.CurrentPage.ToString() },
        { "Filter", Model.Filter.ToString() }
    };

    var editViewData = new ViewDataDictionary(ViewData) { { "RouteValues", routeValues } };
}
<form method="post">
    <div class="row align-items-center">
        <h2>Rules for adding transactions</h2>
        <div class="col">
            <button class="btn btn-primary" type="button" data-toggle="modal" data-target="#createRuleModal">Create</button>
        </div>
        <modal id="createRuleModal" title="Create rule">
            <partial name="_Edit" for="CreateRuleModel" view-data="@editViewData" />
        </modal>
    </div>
    <div class="form-row">
        <fieldset class="col-auto">
            <input class="form-control" id="filterInput" asp-for="Filter" placeholder="Filter" />
        </fieldset>
    </div>
    @for (int i = 0; i < Model.Rules.Count; i++)
    {
        var rule = Model.Rules[i];
        <div class="row my-2">
            <div class="col-9">
                <div class="row align-items-start">
                    <div class="d-inline-block">
                        If <span class="font-weight-bold text-lowercase">@rule.Property</span>
                        <span class="text-lowercase mr-4">@rule.Condition</span>
                    </div>
                    <div class="d-inline-block">
                        <span class="d-inline-block font-italic font-weight-bold" style="width:20em">"@rule.ConditionValue"</span>
                    </div>
                    <div class="d-inline-block">
                        then
                        @if (rule.Action == Core.Transactions.Rules.RuleAction.Skip)
                        {
                            <span class="font-weight-bold"> skip.</span>
                        }
                        else
                        {
                            <text>set </text>
                            <span class="font-weight-bold text-lowercase">@rule.PropertyToSet</span>
                            <text> to </text>
                            <span class="font-weight-bold text-lowercase">@rule.ValueToSet</span>
                        }
                    </div>
                </div>
            </div>
            @{ var modalId = $"editRuleModal_{rule.Id}"; }
            <div class="col btn-group-sm">
                <button class="btn btn-secondary" type="button" data-toggle="modal" data-target="#@(modalId)">Edit</button>
                <button btn-del type="submit" asp-page-handler="delete" asp-route-id="@rule.Id" asp-route-currentPage="@Model.CurrentPage" />
            </div>
        </div>
        <modal id="@modalId" title="Edit rule">
            <partial name="_Edit" for="Rules[i]" view-data="@editViewData" />
        </modal>
    }
    <ul class="pagination">
        @for (int i = 0; i < Model.Rules.TotalPagesCount; i++)
        {
            var disabledClass = Model.Rules.PageIndex == i ? "disabled" : string.Empty;
            <li class="page-item @disabledClass"><a class="page-link" asp-page="./Index" asp-route-currentPage="@i" asp-route-filter="@Model.Filter">@(i + 1)</a></li>
        }
    </ul>
</form>
