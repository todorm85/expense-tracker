@page
@model ExpenseTracker.Web.Pages.Rules.IndexModel
@{
    var routeValues = new Dictionary<string, string>() {
        { "CurrentPage", Model.CurrentPage.ToString() },
        { "Filter", Model.FilterParams.ToString() }
    };

    var editViewData = new ViewDataDictionary(ViewData) { { "RouteValues", routeValues } };
}
<form method="post">
    <h2>Rules for adding transactions</h2>
    <div style="margin: 30px 0px 20px 0px;">
        <button class="btn btn-primary" type="button" data-toggle="modal" data-target="#createRuleModal">Create</button>
        <button class="btn btn-primary" type="submit" asp-page-handler="ProcessUncategorized">Process uncategorized</button>
        <modal id="createRuleModal" title="Create rule">
            <partial name="_Edit" for="CreateRuleModel" view-data="@editViewData" />
        </modal>
        <input style="margin-left: 10px; vertical-align: middle; padding: .250rem;" id="filterInput" asp-for="Search" placeholder="Filter" />
        <button class="btn btn-primary" type="submit" asp-page-handler="Filter">Apply</button>
    </div>
    @for (int i = 0; i < Model.Rules.Count; i++)
    {
        var rule = Model.Rules[i];
        <div style="padding-bottom: 10px">
            <text>If <span class="font-weight-bold text-lowercase">@rule.Property</span></text>
            <span class="text-lowercase">@rule.Condition</span>
            <span class="d-inline-block font-italic font-weight-bold" style="">"@rule.ConditionValue"</span>
            <text>then</text>
            @if (rule.Action == Core.Rules.RuleAction.Skip)
            {
                <span class="font-weight-bold"> skip.</span>
            }
            else
            {
                <text> set </text>
                <span class="font-weight-bold text-lowercase">@rule.PropertyToSet</span>
                <text> to </text>
                <span class="font-weight-bold text-lowercase">@rule.ValueToSet</span>
            }

            @{var modalId = $"editRuleModal_{rule.Id}";}
            <br/>
            <button class="btn btn-secondary" type="button" data-toggle="modal" data-target="#@(modalId)">Edit</button>
            <button btn-del type="submit" asp-page-handler="delete" asp-route-id="@rule.Id" asp-route-currentPage="@Model.FilterParams.PageIndex" />
        </div>


        <modal id="@modalId" title="Edit rule">
            <partial name="_Edit" for="Rules[i]" view-data="@editViewData" />
        </modal>
    }
    <ul class="pagination">
        @for (int i = 0; i < Model.FilterParams.PageSize; i++)
        {
            var disabledClass = Model.FilterParams.PageIndex == i ? "disabled" : string.Empty;
            <li class="page-item @disabledClass"><a class="page-link" asp-page="./Index" asp-route-currentPage="@i" asp-route-filter="@Model.FilterParams">@(i + 1)</a></li>
        }
    </ul>
</form>
